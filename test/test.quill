id: {A: Sort::{u}} -> A -> A = fn {A} a => a

S: {A: Sort::{u}} -> {B: Sort::{v}} -> {C: Sort::{w}} ->
        (A -> B -> C) -> (A -> B) ->
        (A) -> C =
    fn {A} {B} {C} x y z => (x z) (y z)

K: {A: Sort::{u}} -> {B: Sort::{v}} -> A -> B -> A = fn {A} {B} a b => a

I: {A: Sort::{u}} -> A -> A = fn {A} a => K a a

let_test: {A: Sort::{u}} -> A -> A =
    fn {A} a => let
        b = a
        c = b
    c

region: RegionT = Region
static_region: Region = static

borrow_deref: {A: Type::{u}} -> A -> A = fn {A} a => *&a
